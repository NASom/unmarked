<<echo=false>>=
options(width=70)
options(continue=" ")
@

\documentclass[a4paper]{article}
\usepackage[OT1]{fontenc}
\usepackage{Sweave}
\usepackage{natbib}
\usepackage{fullpage}
\bibliographystyle{plain}

\DefineVerbatimEnvironment{Sinput}{Verbatim} {xleftmargin=2em}
\DefineVerbatimEnvironment{Soutput}{Verbatim}{xleftmargin=2em}
\DefineVerbatimEnvironment{Scode}{Verbatim}{xleftmargin=2em}
\fvset{listparameters={\setlength{\topsep}{0pt}}}
\renewenvironment{Schunk}{\vspace{\topsep}}{\vspace{\topsep}}

%%\VignetteIndexEntry{Capture-recapture}

\title{Fitting capture-recapture models in {\tt unmarked}}
\author{Richard Chandler}


\begin{document}

\maketitle

\abstract{The name {\tt unmarked} suggests that the package can't
  accomodate data from studies of marked populations. Indeed the
  emphasis is on data from unmarked populations, but {\tt unmarked}
  also includes functions to fit so-called multinomial $N$-mixture
  models, which can handle data from marked populations. The three
  most common sampling methods that produce suitable data are removal
  sampling, double observer sampling, and capture-recapture
  methods. Although these methods require that individual animals can
  be assigned to distinct categories, these methods are often used when individuals are
  unmarked. For example, a common study design divides a 10-minute
  point count into two or more time intervals, and observers note the
  time periods during which each bird was detected. Thus, keeping
  track of individuals during a small time frame is similar to
  monitoring marked individuals over longer durations. This document
  shows how to fit this class of models using the functions
  \code{multinomPois} and \code{gmultmix}. For more background on the
  models, see \citep{fiskeChandler_2011, royle_generalized_2004,
    chandlerEA_2011}. % Mention Williams et al and Royle-Dorazio too.
}


\section{Introduction}

Cite Royle and Dorazio pg 173 ``In the absence of individual effects
on $p$, the individual encounter histories can be pooled into groups
of unique encounter histories, indexed by $h$, a unique combination of
zeros and ones.''.


\section{Removal Models}

\section{Double Observer Models}

\subsection{Independent Double Observer Models}

\subsection{Dependent Double Observer Models}

\section{Capture-recapture Models}


<<>>=
alfl.capRecap <- read.csv(system.file("csv", "alfl.capRecap.csv", package="unmarked"),
                         row.names=1)
names(alfl.capRecap)
@



<<>>=
crPiFun <- function(p) { # p should have 3 columns
    cbind((1-p[,1]) * (1-p[,2]) * p[,3],
          (1-p[,1]) * p[,2] * (1-p[,3]),
          (1-p[,1]) * p[,2] * p[,3],
          p[,1] * (1-p[,2]) * (1-p[,3]),
          p[,1] * (1-p[,2]) * p[,3],
          p[,1] * p[,2] * (1-p[,3]),
          p[,1] * p[,2] * p[,3])
}
p <- matrix(0.7, 2, 3)
crPiFun(p)
rowSums(crPiFun(p))
@


obsToY needs to be a matrix with
the number of rows equal to the number of columns for some obsCov, and
the number columns equal to the number of columns in y
If obsToY[i,j] is 1, then a missing value in obsCov translates to
a missing value in y

<<>>=
o2y <- matrix(1, 3, 7)
@



<<>>=
visitMat <- matrix(c('V1','V2','V3'), 50, 3, byrow=TRUE)
visitMat[1,2] <- NA
visitMat[2,] <- NA
head(visitMat)

umf.cr1 <- unmarkedFrameMPois(y=alfl.capRecap[,1:7],
                        siteCovs=alfl.capRecap[,c("woody", "struct")],
                        obsCovs=list(visit=visitMat),
                        obsToY=o2y, piFun="crPiFun")

(fm.m0 <- multinomPois(~1 ~1, umf.cr1))
(fm.mt <- multinomPois(~visit ~1, umf.cr1))

@


\end{document}
